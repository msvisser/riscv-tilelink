from enum import Enum

from nmigen import Record, Signal

class ChannelAOpcode(Enum):
    ...


class ChannelDOpcode(Enum):
    ...


class InterfaceA(Record):
    def __init__(self):
        self.opcode: Signal = ...
        self.param: Signal = ...
        self.size: Signal = ...
        self.source: Signal = ...
        self.address: Signal = ...
        self.mask: Signal = ...
        self.data: Signal = ...
        self.corrupt: Signal = ...
        self.valid: Signal = ...
        self.ready: Signal = ...


class InterfaceD(Record):
    def __init__(self):
        self.opcode: Signal = ...
        self.param: Signal = ...
        self.size: Signal = ...
        self.source: Signal = ...
        self.sink: Signal = ...
        self.denied: Signal = ...
        self.corrupt: Signal = ...
        self.data: Signal = ...
        self.valid: Signal = ...
        self.ready: Signal = ...


class Interface(Record):
    def __init__(self, *, addr_width: int, data_width: int, source_id_width: int, sink_id_width: int, name: str = None):
        self.a: InterfaceA = ...
        self.d: InterfaceD = ...
